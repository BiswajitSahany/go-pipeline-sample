pipeline:
  identifier: Build_BiswajitSahany_go_pipeline_sample_1724761899239
  name: Build go-pipeline-sample
  orgIdentifier: default
  projectIdentifier: GH_SAmpleTest
  properties:
    ci:
      codebase:
        build: <+input>
        connectorRef: account.Github
        repoName: BiswajitSahany/go-pipeline-sample
  stages:
    - stage:
        identifier: build
        name: build
        spec:
          caching:
            enabled: true
          cloneCodebase: true
          execution:
            steps:
              - step:
                  identifier: gobuild
                  name: go_build
                  spec:
                    connectorRef: <+input>
                    image: golang:1.15
                    shell: Sh
                    command: go build
                  timeout: ""
                  type: Run
              - step:
                  identifier: gotestcoverage
                  name: go_test_coverage
                  spec:
                    connectorRef: <+input>
                    image: golang:1.15
                    shell: Sh
                    command: go test -coverprofile=coverage.out ./...
                  timeout: ""
                  type: Run
              - step:
                  identifier: gotestreport
                  name: go_test_report
                  spec:
                    connectorRef: <+input>
                    image: golang:1.15
                    shell: Sh
                    command: "export GOBIN=/home/harness/go/bin\n\t\texport PATH=/home/harness/go/bin:$PATH\n\t\techo $PATH\n\t\tgo install github.com/jstemmer/go-junit-report/v2@latest\n\t\tgo test -v 2>&1 ./... | go-junit-report -set-exit-code > report.xml"
                    reports:
                      type: JUnit
                      spec:
                        paths:
                          - /harness/report.xml
                  timeout: ""
                  type: Run
              - step:
                  identifier: dockerbuild
                  name: docker_build
                  spec:
                    caching: true
                    connectorRef: <+input>
                    repo: hello/world
                    tags:
                      - latest
                  timeout: ""
                  type: BuildAndPushDockerRegistry
          infrastructure:
            type: KubernetesDirect
            spec:
              connectorRef: account.LocalCluster_
              namespace: harness-delegate-ng
              automountServiceAccountToken: true
              nodeSelector: {}
              os: Linux
        type: CI
        description: ""
        delegateSelectors:
          - kubernetes-delegate-test
